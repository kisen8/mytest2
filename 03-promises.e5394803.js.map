{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAGtC,SAASG,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUQ,MAAAP,IAEpBG,EAAO,CAAEJ,WAAUQ,MAAAP,G,GAEpBA,E,IAXMN,SAASC,cAAc,SAgB/Ba,iBAAiB,UACtB,SAAqBC,GACnBA,EAAEC,iBAKF,IAJA,IAAIC,EAAaC,OAAOnB,EAAMoB,OAC1BC,EAAYF,OAAOhB,EAAKiB,OACxBE,EAAcH,OAAOf,EAAOgB,OAEvBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrClB,EAAckB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUoB,EAAKD,EAALX,MACjBa,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAGnB,EAAQmB,EAARnB,SAAU0B,EAAKP,EAALX,MAClBa,EAAA7B,GAAS8B,OAAOK,QACd,sBAAqCH,OAAfxB,EAAS,QAAYwB,OAANE,EAAM,M,IAGjDd,GAAcG,EACdL,EAAEkB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nform.addEventListener('submit', onBtnSubmit);\nfunction onBtnSubmit(e) {\n  e.preventDefault();\n  let firstDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n  let amountValue = Number(amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    firstDelay += delayStep;\n    e.currentTarget.reset();\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","delay","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","amountValue","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure","currentTarget","reset"],"version":3,"file":"03-promises.e5394803.js.map"}